{"version":3,"sources":["Components/Contact/Contact.module.css","Components/Filter/Filter.module.css","Components/Layout/Layout.module.css","redux/contacts/contactsActions.js","Components/Form/Form.js","Components/Contact/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Layout/Layout.js","Components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","filterContacts","Form","state","handlerInputChange","e","target","value","setState","handlerSubmit","preventDefault","props","addNewContact","this","className","styles","container","onSubmit","label","type","onChange","Component","connect","ownProps","item","contacts","items","find","dispatch","onRemove","contactsActions","key","button","onClick","filter","normalizedFilter","toLowerCase","includes","map","mapDispathToProps","onFilter","Layout","children","childrenContainer","mapDispatchToProps","onAddContact","nameAtList","some","numberAtList","toast","info","length","initialState","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,0B,mBCAlED,EAAOC,QAAU,CAAC,UAAY,4B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,kBAAoB,oC,4ICUvD,GACbC,WATiBC,YAAa,gBAAgB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACrEC,QAAS,CACPC,QAAS,CAAEC,GAAIC,mBAAUL,OAAMC,eAQjCK,cALoBP,YAAa,mBAMjCQ,eALqBR,YAAa,oB,uDC0CrBS,E,4MA5CbC,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVS,mBAAqB,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBZ,EADkB,EAClBA,KAAMa,EADY,EACZA,MACd,EAAKC,SAAL,eAAiBd,EAAOa,K,EAG1BE,cAAgB,SAACJ,GACfA,EAAEK,iBACF,EAAKC,MAAMC,cAAc,EAAKT,OAC9B,EAAKK,SAAS,CAAEd,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBkB,KAAKV,MAAtBT,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,0BAAMmB,UAAWC,IAAOC,UAAWC,SAAUJ,KAAKJ,eAChD,2BAAOK,UAAWC,IAAOG,OAAzB,QACO,6BACL,2BACEC,KAAK,OACLZ,MAAOb,EACP0B,SAAUP,KAAKT,mBACfV,KAAK,UAGT,2BAAOoB,UAAWC,IAAOG,OAAzB,UACS,6BACP,2BACEC,KAAK,MACLZ,MAAOZ,EACPyB,SAAUP,KAAKT,mBACfV,KAAK,YAGT,4BAAQyB,KAAK,UAAb,oB,GAzCWE,a,yBCcnB,IAWeC,eAXS,SAACnB,EAAOoB,GAC9B,IAAMC,EAAOrB,EAAMsB,SAASC,MAAMC,MAAK,SAACH,GAAD,OAAUA,EAAK1B,KAAOyB,EAASzB,MACtE,OAAO,eAAK0B,MAGa,SAACI,EAAUL,GACpC,MAAO,CACLM,SAAU,kBAAMD,EAASE,EAAgB9B,cAAcuB,EAASzB,SAIrDwB,EAxBf,YAAkD,IAA/BxB,EAA8B,EAA9BA,GAAIJ,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAQkC,EAAY,EAAZA,SACnC,OACE,wBAAIf,UAAWC,IAAOC,UAAWe,IAAKjC,GACpC,2BACGJ,EADH,KACWC,GAEX,4BAAQmB,UAAWC,IAAOiB,OAAQb,KAAK,SAASc,QAASJ,GAAzD,cCeN,IAceP,eAdS,SAACnB,GAAW,IAAD,EACPA,EAAMsB,SAAxBC,EADyB,EACzBA,MAAOQ,EADkB,EAClBA,OACTC,EAAmBD,EAAOE,cAOhC,MAAO,CACLX,SAPsBC,EAAMQ,QAC5B,SAACrC,GAAD,OACEA,EAAQH,KAAK0C,cAAcC,SAASF,IACpCtC,EAAQF,OAAO0C,SAASH,SAQfZ,EAnCf,YAAoC,IAAbG,EAAY,EAAZA,SACrB,OACE,4BACGA,EAASa,KAAI,gBAAGxC,EAAH,EAAGA,GAAH,OACZ,kBAAC,EAAD,CAASiC,IAAKjC,EAAIA,GAAIA,W,iBCe9B,IAIMyC,EAAoB,CACxBC,SAAUV,EAAgB7B,gBAGbqB,eARS,SAACnB,GACvB,MAAO,CAAEI,MAAOJ,EAAMsB,SAASS,UAOOK,EAAzBjB,EA1Bf,YAAsC,IAApBf,EAAmB,EAAnBA,MAAOiC,EAAY,EAAZA,SACvB,OACE,2BAAO1B,UAAWC,IAAOC,WAAzB,wBACuB,6BACrB,2BACEG,KAAK,OACLZ,MAAOA,EACPa,SAAU,SAACf,GAAD,OAAOmC,EAASnC,EAAEC,OAAOC,c,iBCG5BkC,EAZA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,kBAAC,WAAD,KACE,yBAAK5B,UAAWC,IAAO4B,mBAAoBD,KCuC3CE,G,MAAqB,CACzBC,aAAcf,EAAgBtC,aAGjB8B,eARS,SAACnB,GACvB,MAAO,CAAEsB,SAAUtB,EAAMsB,SAASC,SAOIkB,EAAzBtB,EAxCH,SAAC,GAAgC,IAA9BG,EAA6B,EAA7BA,SAAUoB,EAAmB,EAAnBA,aAkBvB,OACE,oCACE,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,yCACA,kBAAC,EAAD,CAAMjC,cAtBc,SAAC,GAAsB,IAApBlB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3BmD,EAAarB,EAASsB,MAC1B,SAAClD,GAAD,OAAaA,EAAQH,KAAK0C,gBAAkB1C,EAAK0C,iBAE7CY,EAAevB,EAASsB,MAAK,SAAClD,GAAD,OAAaA,EAAQF,SAAWA,KAE/DmD,EACFG,IAAMC,KAAN,UAAcxD,EAAd,6BACSsD,EACTC,IAAMC,KAAN,UAAcvD,EAAd,6BACUD,GAASC,EAGnBkD,EAAanD,EAAMC,GAFnBsD,IAAMC,KAAK,iCAYRzB,EAAS0B,OAAS,GAAK,kBAAC,EAAD,MACvB1B,EAAS0B,OAAS,GAAK,wCACxB,kBAAC,EAAD,W,eClCFC,EAAe,CACnB3B,SAAU,CACRC,MAAO,CACL,CAAE5B,GAAI,OAAQJ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEG,GAAI,OAAQJ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEG,GAAI,OAAQJ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEG,GAAI,OAAQJ,KAAM,iBAAkBC,OAAQ,cAEhDuC,OAAQ,KAuBGmB,cAAgB,CAAE3B,MAnBnB,WAA6D,IAA5DvB,EAA2D,uDAAnDiD,EAAa3B,SAASC,MAA6B,yCAApBP,EAAoB,EAApBA,KAAMvB,EAAc,EAAdA,QAC1D,OAAQuB,GACN,KAAKW,EAAgBtC,WAAW2B,KAC9B,MAAM,GAAN,mBAAWhB,GAAX,CAAkBP,EAAQC,UAC5B,KAAKiC,EAAgB9B,cAAcmB,KACjC,OAAOhB,EAAM+B,QAAO,SAACV,GAAD,OAAUA,EAAK1B,KAAOF,KAC5C,QACE,OAAOO,IAY2B+B,OATzB,WAA8D,IAA7D/B,EAA4D,uDAApDiD,EAAa3B,SAASS,OAA8B,yCAApBf,EAAoB,EAApBA,KAAMvB,EAAc,EAAdA,QAC5D,OAAQuB,GACN,KAAKW,EAAgB7B,eAAekB,KAClC,OAAOvB,EACT,QACE,OAAOO,MCpBEmD,EANDC,YAAe,CAC3BC,QAAS,CACP/B,SAAUgC,KCCdC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAGJO,SAASC,eAAe,U,kBCX1BxE,EAAOC,QAAU,CAAC,UAAY,2B","file":"static/js/main.fc8fac7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contact_container__13m1A\",\"button\":\"Contact_button__2uPLq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3kznb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Layout_header__2fqHF\",\"childrenContainer\":\"Layout_childrenContainer__3fhXu\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { uuidv4 } from \"uuidv4\";\r\n\r\nconst addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: { id: uuidv4(), name, number },\r\n  },\r\n}));\r\nconst removeContact = createAction(\"contacts/remove\");\r\nconst filterContacts = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  filterContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  static propTypes = { addNewContact: PropTypes.func.isRequired };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handlerInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addNewContact(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.container} onSubmit={this.handlerSubmit}>\r\n        <label className={styles.label}>\r\n          Name <br />\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handlerInputChange}\r\n            name=\"name\"\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number <br />\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handlerInputChange}\r\n            name=\"number\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, onRemove }) {\r\n  return (\r\n    <li className={styles.container} key={id}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find((item) => item.id === ownProps.id);\r\n  return { ...item };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemove: () => dispatch(contactsActions.removeContact(ownProps.id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id }) => (\r\n        <Contact key={id} id={id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(\r\n    (contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter) ||\r\n      contact.number.includes(filter)\r\n  );\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsActions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onFilter }) {\r\n  return (\r\n    <label className={styles.container}>\r\n      Find contact by name <br />\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onFilter(e.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { value: state.contacts.filter };\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  onFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Filter);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Layout.module.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.childrenContainer}>{children}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport contactsActions from \"../redux/contacts/contactsActions\";\r\nimport Form from \"./Form/Form\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst App = ({ contacts, onAddContact }) => {\r\n  const handlerAddContact = ({ name, number }) => {\r\n    const nameAtList = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    );\r\n    const numberAtList = contacts.some((contact) => contact.number === number);\r\n\r\n    if (nameAtList) {\r\n      toast.info(`${name} is already in contacts!`);\r\n    } else if (numberAtList) {\r\n      toast.info(`${number} is already in contacts!`);\r\n    } else if (!name || !number) {\r\n      toast.info(\"Please, fill out the form!\");\r\n    } else {\r\n      onAddContact(name, number);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <ToastContainer />\r\n        <h1>Phonebook</h1>\r\n        <Form addNewContact={handlerAddContact} />\r\n        {contacts.length > 1 && <Filter />}\r\n        {contacts.length > 0 && <h2>Contacts</h2>}\r\n        <ContactList />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { contacts: state.contacts.items };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsActions.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport contactsActions from \"./contactsActions\";\r\nconst initialState = {\r\n  contacts: {\r\n    items: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst items = (state = initialState.contacts.items, { type, payload }) => {\r\n  switch (type) {\r\n    case contactsActions.addContact.type:\r\n      return [...state, payload.contact];\r\n    case contactsActions.removeContact.type:\r\n      return state.filter((item) => item.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = initialState.contacts.filter, { type, payload }) => {\r\n  switch (type) {\r\n    case contactsActions.filterContacts.type:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./Components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__13iRq\"};"],"sourceRoot":""}